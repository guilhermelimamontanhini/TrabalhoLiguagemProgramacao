// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trabalho.Models;

namespace Trabalho.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Trabalho.Models.Dominio.Jogo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int>("plataformaID")
                        .HasColumnType("int");

                    b.Property<double>("preco")
                        .HasColumnType("float");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("plataformaID");

                    b.HasIndex("usuarioID");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("Trabalho.Models.Dominio.Plataforma", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Usuarioid")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("id");

                    b.HasIndex("Usuarioid");

                    b.ToTable("Plataformas");
                });

            modelBuilder.Entity("Trabalho.Models.Dominio.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("plataformaID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("plataformaID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Trabalho.Models.Dominio.Jogo", b =>
                {
                    b.HasOne("Trabalho.Models.Dominio.Plataforma", "plataforma")
                        .WithMany("jogos")
                        .HasForeignKey("plataformaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Trabalho.Models.Dominio.Usuario", "usuario")
                        .WithMany("jogos")
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("plataforma");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Trabalho.Models.Dominio.Plataforma", b =>
                {
                    b.HasOne("Trabalho.Models.Dominio.Usuario", null)
                        .WithMany("plataformas")
                        .HasForeignKey("Usuarioid");
                });

            modelBuilder.Entity("Trabalho.Models.Dominio.Usuario", b =>
                {
                    b.HasOne("Trabalho.Models.Dominio.Plataforma", "plataforma")
                        .WithMany("usuarios")
                        .HasForeignKey("plataformaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("plataforma");
                });

            modelBuilder.Entity("Trabalho.Models.Dominio.Plataforma", b =>
                {
                    b.Navigation("jogos");

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("Trabalho.Models.Dominio.Usuario", b =>
                {
                    b.Navigation("jogos");

                    b.Navigation("plataformas");
                });
#pragma warning restore 612, 618
        }
    }
}
